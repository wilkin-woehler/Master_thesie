import numpy as np
import matplotlib.pyplot as plt
import os as os

#data generated by grep "Time taken by function: [0-9][0-9][0-9][0-9][0-9]" NEMO_OUTPUT_16384_450_540_eq5k_pr200k_*| grep -Eo  '[0-9][0-9][0-9][0-9][0-9][.][0-9]*' > grep_out_16384_450_540_eq5k_pr200k.txt

def extract_parameters(filename):
	split_string = filename.split("_")
	print(split_string)
	N = int(split_string[2])
	rho_i = float(split_string[3])*1e-3
	rho_f = float(split_string[4])*1e-3
	eq = int(split_string[5][2:-1])*1e3
	pr = int(split_string[6][2:-5])*1e3
	#seed = int(split_string[7][:-3])
	return(N,rho_i,rho_f,eq,pr)

data_names = os.listdir("data/")
data=[]
plt.figure()
#print(data_names)
max_time, min_time = 0, 1e8
for i in range(len(data_names)):
	N,rho_i,rho_f,eq,pr = extract_parameters(data_names[i])
	print(N,eq,pr)
	data.append(np.genfromtxt("data/"+data_names[i])/N/(eq+pr)*1e6)
	if (max(data[-1])>max_time): max_time=max(data[-1])
	if (min(data[-1])<min_time): min_time=min(data[-1])

bins = np.linspace(min_time,max_time,100)
for i in range(len(data_names)):
	plt.hist(data[i],label=data_names[i], bins = bins, alpha = 0.3, density = True)
plt.xlabel(r"time in $\mu s$/Event")
plt.ylabel("Normed Counts")
plt.title("Runtime of some simulations, as extracted from the output")
plt.legend()
plt.savefig("runtimes.png")

